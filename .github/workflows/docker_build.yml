name: Build and Push Docker Image

on:
  workflow_dispatch:
  push:
    paths:
      - 'src/backend/**'
      - 'src/frontend/**'
    branches:
      - master

jobs:
  build_and_push_image:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        include:
          - context: "src/backend/"
            dockerfile: "src/backend/Dockerfile"
            image_tag: "ainberger/code-sprint-backend"
            path: 'src/backend/**'
          - context: "src/frontend/"
            dockerfile: "src/frontend/Dockerfile"
            image_tag: "ainberger/code-sprint-frontend"
            path: 'src/frontend/**'

    services:
      docker:
        image: docker:dind
        options: --privileged

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to Docker Registry
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.CI_REGISTRY_USER }}
          password: ${{ secrets.CI_REGISTRY_PAT }}
          
      - name: Get current date
        id: date
        run: echo "TIMESTAMP=$(date +'%Y%m%d%H%M%S')" >> $GITHUB_ENV          
          
      - name: Determine changes
        id: check_changes
        run: |
          echo "Checking changes in ${{ matrix.component }}..."
          if git diff --quiet HEAD^ HEAD ${{ matrix.path }}; then
            echo "::set-output name=${{ matrix.component }}_changed::false"
          else
            echo "::set-output name=${{ matrix.component }}_changed::true"
          fi
          
      - name: Build and push Docker image if needed
        if: steps.check_changes.outputs.${{ matrix.component }}_changed == 'true'
        run: |
          echo "Changes detected, building and pushing..."
          echo "Building image ${{ matrix.image_tag }}:$TIMESTAMP-${{ github.sha }}"
          docker build -t ${{ matrix.image_tag }}:$TIMESTAMP-${{ github.sha }} -f ${{ matrix.dockerfile }} ${{ matrix.context }}
          docker push ${{ matrix.image_tag }}:$TIMESTAMP-${{ github.sha }}
          
          echo "Tagging image as latest"
          docker tag ${{ matrix.image_tag }}:$TIMESTAMP-${{ github.sha }} ${{ matrix.image_tag }}:latest
          docker push ${{ matrix.image_tag }}:latest